@model EduQuiz_5P.ViewModel.UserExamInfoVM
@using EduQuiz_5P.Helpers;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_Layout.cshtml";
    ViewData["Title"] = "Làm bài thi";
    int index = 0;
}
<section id="home" class="container section-exam py-2">
    <nav class="mt-1"
         style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);"
         aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="#">English</a></li>
            <li class="breadcrumb-item active" aria-current="page">Bài thi #125</li>
        </ol>
    </nav>
    <div class="exam-header">
        <h4 class="header-title">@Model.ExamName</h4>
    </div>

</section>
<aside id="sidebar" class="sidebar sidebar-exam text-center d-none d-lg-block">
        <h5 class="text-start fw-bold">Thời gian</h5>
        <h3 class="text-primary mb-4 fw-bold" id="countdown-exam">00:00</h3>
        <h5 class="fw-bold my-3 text-start">Danh sách câu hỏi</h5>
    <div class="row gap-2 overflow-y-auto" style="max-height:320px">
        @{
            index = 1;
        }
            @foreach(var item in Model.UserExamDetailVM)
            {
                var QuestionElement = $"Question{item.QuestionVM.QuestionId}";
                <div class="col-2">
                <a href="#@QuestionElement" class="btn btn-question @(item.SelectAnswerId.HasValue ? "active" : "")">@(index++)</a>
                </div>
            }
        </div>
        <hr>
        <div class="exam-info mb-3">
            <p class="number-question fw-bold">
                Số câu đã làm: <span id="question-complete"
                                     class="correct">@Model.QuestionComplete</span><span class="text-dark">/</span><span class="text-danger">@Model.NumberOfQuestion</span>
            </p>
        </div>
        <div class="text-center">
            <form asp-action="Result" asp-route-UserExamId="@Model.UserExamId">
                <button class="btn btn-primary">Nộp bài</button>
            </form>
        </div>

</aside><!-- End Sidebar-->
<section class="py-0 container-exam">
    <div class="mt-lg-5 mt-md-3">
        <div class="exam-content">
            @{index = 1;}
            @foreach(var item in Model.UserExamDetailVM)
            {
                var QuestionElement = $"Question{item.QuestionVM.QuestionId}";
                <div id="@QuestionElement" class="row card p-4 mb-7 border-0 align-items-center justify-content-center">
                    <p class="text-question">
                        <span class="fw-bold">Câu @(index++).</span> @item.QuestionVM.QuestionName
                    </p>
                    @if (!string.IsNullOrEmpty(@item.QuestionVM.UrlImage))
                    {
                        <img src="@item.QuestionVM.UrlImage" alt="Ảnh Câu Hỏi" style="max-width:30rem">
                    }
                    @foreach(var answer in item.QuestionVM.AnswerList)
                    {
                        <div class="radio-field">
                            <input type="radio" id="Question[@item.QuestionVM.QuestionId]" name="Question[@item.QuestionVM.QuestionId]" value="@answer.AnswerId"
                                   onchange="saveAnswer(this, @answer.AnswerId, @item.QuestionVM.QuestionId, @item.UserExamDetailId)" @(item.SelectAnswerId == answer.AnswerId ? "checked" : "")>
                            <label for="Question[@item.QuestionVM.QuestionId]">
                                @answer.AnswerName
                            </label>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</section>
<div class="offcanvas offcanvas-bottom" tabindex="-1" id="MobileExam" aria-labelledby="MobileExamLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="MobileExamLabel">Bài thi #415</h5>
        <a type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></a>
    </div>
    <hr>
    <div class="offcanvas-body">
        <p>Thời gian còn: <span class="text-danger fw-bold">00:00</span></p>
        <h5 class="fw-bold mt-3 mb-4">Danh sách câu hỏi</h5>
        <div class="container">
            <div class="row gap-2">
                @{
                    index = 1;
                }
                @foreach (var item in Model.UserExamDetailVM)
                {
                    var QuestionElement = $"Question{item.QuestionVM.QuestionId}";
                    <div class="col-2">
                        <a href="#@QuestionElement" class="btn btn-question @(item.SelectAnswerId.HasValue ? "active" : "")">@(index++)</a>
                    </div>
                }
            </div>
            <hr>
            <div class="exam-info mb-3">
                <p class="number-question fw-bold">
                    Số câu đã làm: <span id="question-complete"
                                         class="correct">@Model.QuestionComplete</span><span class="text-dark">/</span><span class="text-danger">@Model.NumberOfQuestion</span>
                </p>
            </div>
            <hr>
        </div>
    </div>
</div>
<div class="d-block d-lg-none d-flex justify-content-center align-items-center mobileexam-to-top w-100">
    <div class="">
        <a data-bs-toggle="offcanvas" href="#MobileExam" role="button" aria-controls="MobileExam"
           class="btn btn-questionlist">Câu hỏi</a>
    </div>
    <div class="ms-auto">
        <p class="btn btn-questionlist mb-0" id="countdown-exam">00:00</p>
    </div>
    <form asp-action="Result" asp-route-UserExamId="@Model.UserExamId" class="ms-auto">
        <button class="btn btn-primary">Nộp Bài</button>
    </form>
</div>
@section Scripts {
    <script>
        // Lấy thời gian exam từ model
        var startTime = new Date('@DateTime.UtcNow.ToTimeZone()');
        var endTime = new Date('@Model.EndTime');
        var remainingTime = Math.floor((endTime - startTime) / 1000);
        countdown(remainingTime, "#countdown-exam", @Model.UserExamId);
        function saveAnswer(radio, selectedAnswerId, QuestionId, UserExamDetailId) {
            var elementQuestion = document.querySelectorAll('a[href="#Question' + QuestionId + '"]');
            $.ajax({
                url: "/UserExam/SelectAnswer",
                type: "POST",
                data: {
                    UserExamDetailId: UserExamDetailId,
                    AnswerId: selectedAnswerId,
                    QuestionId: QuestionId
                },
                success: function (response) {
                    updateQuestionComplete(@(Model.UserExamId));
                    elementQuestion.forEach(function (question) {
                        question.classList.add('active');
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }
    </script>
}